{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageCount","Math","ceil","handlePageChange","page","className","cn","disabled","href","onClick","Array","keys","map","active","items","from","to","numbers","n","push","getNumbers","App","useState","setCurrentPage","setPerPage","indexOfLastItem","indexOfFirstItem","currentItems","slice","firstItemOnPage","lastItemOnPage","min","id","onChange","e","Number","target","value","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"2NAUaA,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAYC,KAAKC,KAAKN,EAAQC,GAE9BM,EAAmB,SAACC,GACpBA,EAAO,GAAKA,EAAOJ,GAInBI,IAASN,GACXC,EAAaK,IAIjB,OACE,qBAAIC,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAG,CAChB,aAAa,EACbC,SAA0B,IAAhBT,IAFZ,SAKE,mBACE,UAAQ,WACRO,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBV,EACfW,QAAS,kBAAMN,EAAiBL,EAAc,IALhD,oBAUD,YAAIY,MAAMV,GAAWW,QAAQC,KAAI,SAAAR,GAAI,OACpC,oBACEC,UAAWC,IAAG,CACZ,aAAa,EACbO,OAAQf,IAAgBM,EAAO,IAHnC,SAOE,mBACE,UAAQ,WACRC,UAAU,YACVG,KAAI,WAAMJ,EAAO,GACjBK,QAAS,kBAAMN,EAAiBC,EAAO,IAJzC,SAMGA,EAAO,KARLA,MAaT,oBAAIC,UAAWC,IAAG,CAChB,aAAa,EACbC,SAAUT,IAAgBE,IAF5B,SAKE,mBACE,UAAQ,WACRK,UAAU,YACVG,KAAK,QACL,gBAAeV,IAAgBE,EAC/BS,QAAS,kBAAMN,EAAiBL,EAAc,IALhD,wBC/DFgB,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDDKG,CAAW,EAAG,IACzBR,KAAI,SAAAM,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,IACA,EAAsCC,mBAAS,GAA/C,mBAAOxB,EAAP,KAAoByB,EAApB,KACA,EAA8BD,mBAAS,GAAvC,mBAAOzB,EAAP,KAAgB2B,EAAhB,KAEMC,EAAkB3B,EAAcD,EAChC6B,EAAmBD,EAAkB5B,EACrC8B,EAAeb,EAAMc,MAAMF,EAAkBD,GAW7CI,EAAkC,IAAhB/B,EACpB,EACAD,GAAWC,EAAc,GAAK,EAC5BgC,EAAiB7B,KAAK8B,IAAIlC,EAAUC,EApB5B,IAsBd,OACE,sBAAKO,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWP,EADX,mBACiC+B,EADjC,cACsDC,EADtD,eA1BU,GA0BV,OAIA,sBAAKzB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACR2B,GAAG,kBACH3B,UAAU,eACV4B,SAxBkB,SAACC,GAC3BV,EAAWW,OAAOD,EAAEE,OAAOC,QAC3Bd,EAAe,IAuBPc,MAAOxC,EALT,UAOE,wBAAQwC,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOC,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACET,MApDQ,GAqDRC,QAASA,EACTC,YAAaA,EACbC,aA/C0C,SAACK,GAC/CmB,EAAenB,MAgDb,6BACGuB,EAAaf,KAAI,SAAA2B,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YElEnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7830115b.chunk.js","sourcesContent":["import cn from 'classnames';\nimport React from 'react';\n\nexport interface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const pageCount = Math.ceil(total / perPage);\n\n  const handlePageChange = (page: number) => {\n    if (page < 1 || page > pageCount) {\n      return;\n    }\n\n    if (page !== currentPage) {\n      onPageChange(page);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li className={cn({\n        'page-item': true,\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => handlePageChange(currentPage - 1)}\n        >\n          «\n        </a>\n      </li>\n      {[...Array(pageCount).keys()].map(page => (\n        <li\n          className={cn({\n            'page-item': true,\n            active: currentPage === page + 1,\n          })}\n          key={page}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page + 1}`}\n            onClick={() => handlePageChange(page + 1)}\n          >\n            {page + 1}\n          </a>\n        </li>\n      ))}\n\n      <li className={cn({\n        'page-item': true,\n        disabled: currentPage === pageCount,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === pageCount}\n          onClick={() => handlePageChange(currentPage + 1)}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination, Props } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [currentPage, setCurrentPage] = useState(1);\n  const [perPage, setPerPage] = useState(5);\n\n  const indexOfLastItem = currentPage * perPage;\n  const indexOfFirstItem = indexOfLastItem - perPage;\n  const currentItems = items.slice(indexOfFirstItem, indexOfLastItem);\n\n  const handlePageChange: Props['onPageChange'] = (page) => {\n    setCurrentPage(page);\n  };\n\n  const handlePerPageChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(Number(e.target.value));\n    setCurrentPage(1);\n  };\n\n  const firstItemOnPage = currentPage === 1\n    ? 1\n    : perPage * (currentPage - 1) + 1;\n  const lastItemOnPage = Math.min(perPage * currentPage, total);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItemOnPage} - ${lastItemOnPage} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            onChange={handlePerPageChange}\n            value={perPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handlePageChange}\n      />\n      <ul>\n        {currentItems.map(item => (\n          <li key={item} data-cy=\"item\">{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}